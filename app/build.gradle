/*
 * Copyright (c) 2021 Shahrukh Ahmed Siddiqui
 *
 * You may use, distribute and modify this code under the
 * terms of the MIT license - https://opensource.org/licenses/MIT
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

def apikeyPropertiesFile = rootProject.file("api.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion Base.compileSdkVersion

    defaultConfig {
        applicationId Base.applicationId
        minSdkVersion Base.minSdkVersion
        targetSdkVersion Base.targetSdkVersion
        versionCode Base.versionCode
        versionName Base.versionName

        testInstrumentationRunner "com.shahrukhamd.githubuser.GithubUserTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'BASE_URL', apikeyProperties['BASE_URL']
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true // http://g.co/androidstudio/not-mocked
        }
    }

    configurations.all {
        resolutionStrategy {
            force 'androidx.test:monitor:1.4.0' // https://stackoverflow.com/a/67472544/3625510
        }
    }

    packagingOptions {
        excludes += 'META-INF/DEPENDENCIES.txt'
        excludes += 'META-INF/LICENSE.txt'
        excludes += 'META-INF/NOTICE.txt'
        excludes += 'META-INF/NOTICE'
        excludes += 'META-INF/LICENSE'
        excludes += 'META-INF/DEPENDENCIES'
        excludes += 'META-INF/notice.txt'
        excludes += 'META-INF/license.txt'
        excludes += 'META-INF/dependencies.txt'
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
}

dependencies {
    implementation project(":utils")

    implementation Base.kotlinStd
    implementation Base.kotlinKtx
    implementation Base.lifecycle
    implementation Base.appCompat
    implementation Base.activity
    implementation Base.fragment

    implementation Database.roomRuntime
    kapt Database.roomCompiler
    implementation Database.roomKtx

    implementation Ui.glide
    implementation Ui.material
    implementation Ui.recyclerView
    implementation Ui.constraintLayout
    implementation Ui.swipeRefresh

    implementation Networking.retrofit
    implementation Networking.moshiConverter
    implementation Networking.moshiKotlin
    implementation Networking.okhttp
    implementation Networking.okhttpIntercepter

    implementation Di.hiltAndroid
    kapt Di.hiltCompiler

    implementation Coroutine.core
    implementation Coroutine.android

    implementation Tools.timber

    implementation Pagination.runtimeKtx

    implementation Navigation.fragmentKtx
    implementation Navigation.uiKtx

    testImplementation Testing.mockK
    testImplementation Testing.truth
    testImplementation Testing.archCore
    testImplementation Testing.coroutine
    testImplementation Testing.kotlinJunit

    kaptAndroidTest Di.hiltCompilerTest
    androidTestImplementation Di.hiltAndroidTest
    androidTestImplementation Testing.archCore
    androidTestImplementation Testing.truth
    androidTestImplementation Testing.androidTestCore
    androidTestImplementation Testing.espressoCore
    androidTestImplementation Testing.espressoIntent
    androidTestImplementation Testing.coroutine
    androidTestImplementation Testing.androidJunit

    debugImplementation Testing.fragmentTesting
}